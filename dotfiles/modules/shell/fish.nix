{ config, options, pkgs, lib, ... }:

with lib;
with lib.my;
let cfg = config.modules.shell.fish;
    configDir = config.dotfiles.configDir;
in {
  options.modules.shell.fish = with types; {
    enable = mkBoolOpt false;

  };

  config = mkIf cfg.enable {
    users.defaultUserShell = pkgs.fish;

    programs.fish = {
      enable = true;
    };

    user.packages = with pkgs; [
      bat
      exa
      fd
      fzf
      jq
      ripgrep
      tldr
    ];

   # env = {
   #   ZDOTDIR   = "$XDG_CONFIG_HOME/zsh";
   #   ZSH_CACHE = "$XDG_CACHE_HOME/zsh";
   #   ZGEN_DIR  = "$XDG_DATA_HOME/zgenom";
   # };

    home.configFile = {
   #   # Write it recursively so other modules can write files to it
      "fish" = { source = "${configDir}/fish";};

   #   # Why am I creating extra.zsh{rc,env} when I could be using extraInit?
   #   # Because extraInit generates those files in /etc/profile, and mine just
   #   # write the files to ~/.config/zsh; where it's easier to edit and tweak
   #   # them in case of issues or when experimenting.
   #   "zsh/extra.zshrc".text =
   #     let aliasLines = mapAttrsToList (n: v: "alias ${n}=\"${v}\"") cfg.aliases;
   #     in ''
   #        # This file was autogenerated, do not edit it!
   #        ${concatStringsSep "\n" aliasLines}
   #        ${concatMapStrings (path: "source '${path}'\n") cfg.rcFiles}
   #        ${cfg.rcInit}
   #     '';

   #   "zsh/extra.zshenv".text = ''
   #     # This file is autogenerated, do not edit it!
   #     ${concatMapStrings (path: "source '${path}'\n") cfg.envFiles}
   #     ${cfg.envInit}
   #   '';
    };

   # system.userActivationScripts.cleanupZgen = ''
   #   rm -rf $ZSH_CACHE
   #   rm -fv $ZGEN_DIR/init.zsh{,.zwc}
   # '';
  };
}
